{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMLHgimnVxmLIOO9LC9pw6F"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"pT_mKQUt0D7U"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5LFoIYUN0CxF","executionInfo":{"status":"ok","timestamp":1731374018704,"user_tz":420,"elapsed":18406,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"44e69e56-b05b-41e9-f4b4-238df11e85f1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import pandas as pd\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["cpi_og = pd.read_excel(\"/content/drive/MyDrive/UnemploymentProject/OGDatasets/CPI_OG.xlsx\")\n","cpi = cpi_og.copy()"],"metadata":{"id":"K0ZnrdMO0IXs","executionInfo":{"status":"ok","timestamp":1731374020419,"user_tz":420,"elapsed":1720,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["cpi.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hfOi3GpsYehE","executionInfo":{"status":"ok","timestamp":1731374020420,"user_tz":420,"elapsed":11,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"ed81fb94-709a-4780-ea26-76e77c22ace8"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 112 entries, 0 to 111\n","Data columns (total 13 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Year    112 non-null    int64  \n"," 1   Jan     112 non-null    float64\n"," 2   Feb     112 non-null    float64\n"," 3   Mar     112 non-null    float64\n"," 4   Apr     112 non-null    float64\n"," 5   May     112 non-null    float64\n"," 6   Jun     112 non-null    float64\n"," 7   Jul     112 non-null    float64\n"," 8   Aug     112 non-null    float64\n"," 9   Sep     112 non-null    float64\n"," 10  Oct     111 non-null    float64\n"," 11  Nov     111 non-null    float64\n"," 12  Dec     111 non-null    float64\n","dtypes: float64(12), int64(1)\n","memory usage: 11.5 KB\n"]}]},{"cell_type":"code","source":["cpi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HHRp81iXY_cY","executionInfo":{"status":"ok","timestamp":1731374020703,"user_tz":420,"elapsed":291,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"ec1e5ba7-5e4a-4ea6-a107-70a8c857c893"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year   Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov  \\\n","0  1913   9.8   9.8   9.8   9.8   9.7   9.8   9.9   9.9  10.0  10.0  10.1   \n","1  1914  10.0   9.9   9.9   9.8   9.9   9.9  10.0  10.2  10.2  10.1  10.2   \n","2  1915  10.1  10.0   9.9  10.0  10.1  10.1  10.1  10.1  10.1  10.2  10.3   \n","3  1916  10.4  10.4  10.5  10.6  10.7  10.8  10.8  10.9  11.1  11.3  11.5   \n","4  1917  11.7  12.0  12.0  12.6  12.8  13.0  12.8  13.0  13.3  13.5  13.5   \n","\n","    Dec  \n","0  10.0  \n","1  10.1  \n","2  10.3  \n","3  11.6  \n","4  13.7  "],"text/html":["\n","  <div id=\"df-d8f105da-ca45-460c-930a-d14277f1bf43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Jan</th>\n","      <th>Feb</th>\n","      <th>Mar</th>\n","      <th>Apr</th>\n","      <th>May</th>\n","      <th>Jun</th>\n","      <th>Jul</th>\n","      <th>Aug</th>\n","      <th>Sep</th>\n","      <th>Oct</th>\n","      <th>Nov</th>\n","      <th>Dec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1913</td>\n","      <td>9.8</td>\n","      <td>9.8</td>\n","      <td>9.8</td>\n","      <td>9.8</td>\n","      <td>9.7</td>\n","      <td>9.8</td>\n","      <td>9.9</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>10.0</td>\n","      <td>10.1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1914</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>9.9</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>10.2</td>\n","      <td>10.2</td>\n","      <td>10.1</td>\n","      <td>10.2</td>\n","      <td>10.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1915</td>\n","      <td>10.1</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>10.1</td>\n","      <td>10.1</td>\n","      <td>10.1</td>\n","      <td>10.1</td>\n","      <td>10.1</td>\n","      <td>10.2</td>\n","      <td>10.3</td>\n","      <td>10.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1916</td>\n","      <td>10.4</td>\n","      <td>10.4</td>\n","      <td>10.5</td>\n","      <td>10.6</td>\n","      <td>10.7</td>\n","      <td>10.8</td>\n","      <td>10.8</td>\n","      <td>10.9</td>\n","      <td>11.1</td>\n","      <td>11.3</td>\n","      <td>11.5</td>\n","      <td>11.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1917</td>\n","      <td>11.7</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","      <td>12.6</td>\n","      <td>12.8</td>\n","      <td>13.0</td>\n","      <td>12.8</td>\n","      <td>13.0</td>\n","      <td>13.3</td>\n","      <td>13.5</td>\n","      <td>13.5</td>\n","      <td>13.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8f105da-ca45-460c-930a-d14277f1bf43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d8f105da-ca45-460c-930a-d14277f1bf43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d8f105da-ca45-460c-930a-d14277f1bf43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-946c490a-2c35-46ae-8f02-2a3954281bbf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-946c490a-2c35-46ae-8f02-2a3954281bbf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-946c490a-2c35-46ae-8f02-2a3954281bbf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi","summary":"{\n  \"name\": \"cpi\",\n  \"rows\": 112,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1913,\n        \"max\": 2024,\n        \"num_unique_values\": 112,\n        \"samples\": [\n          1953,\n          1978,\n          1917\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.41359655318158,\n        \"min\": 9.8,\n        \"max\": 308.417,\n        \"num_unique_values\": 106,\n        \"samples\": [\n          251.712,\n          16.8,\n          11.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Feb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.84822143106734,\n        \"min\": 9.8,\n        \"max\": 310.326,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          26.3,\n          121.6,\n          102.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.33291973629753,\n        \"min\": 9.8,\n        \"max\": 312.332,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          26.3,\n          122.3,\n          102.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Apr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.64530317187939,\n        \"min\": 9.8,\n        \"max\": 313.548,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          25.8,\n          108.6,\n          106.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"May\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.93984805976581,\n        \"min\": 9.7,\n        \"max\": 314.069,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          23.7,\n          108.9,\n          107.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jun\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.22355863508714,\n        \"min\": 9.8,\n        \"max\": 314.175,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          25.9,\n          109.5,\n          107.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.28813613699363,\n        \"min\": 9.9,\n        \"max\": 314.54,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          23.7,\n          107.8,\n          104.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Aug\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.4152173605672,\n        \"min\": 9.9,\n        \"max\": 314.796,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          24.3,\n          109.7,\n          108.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.58619584718375,\n        \"min\": 10.0,\n        \"max\": 315.301,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          24.4,\n          110.2,\n          108.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.38175039336788,\n        \"min\": 10.0,\n        \"max\": 307.671,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          208.936,\n          67.1,\n          125.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nov\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.22742828415599,\n        \"min\": 10.1,\n        \"max\": 307.051,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          115.4,\n          31.7,\n          260.229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.07915970054829,\n        \"min\": 10.0,\n        \"max\": 306.746,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          23.6,\n          109.3,\n          105.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["null_rows = cpi[cpi.isnull().any(axis=1)]\n","print(null_rows)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UJnAJ9qNZCV_","executionInfo":{"status":"ok","timestamp":1731374020703,"user_tz":420,"elapsed":6,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"6e74e042-debb-4eba-ba70-cdd9cac6a5c9"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["     Year      Jan      Feb      Mar      Apr      May      Jun     Jul  \\\n","111  2024  308.417  310.326  312.332  313.548  314.069  314.175  314.54   \n","\n","         Aug      Sep  Oct  Nov  Dec  \n","111  314.796  315.301  NaN  NaN  NaN  \n"]}]},{"cell_type":"code","source":["cpi = cpi.dropna()"],"metadata":{"id":"-mj67E6jZaIG","executionInfo":{"status":"ok","timestamp":1731374020703,"user_tz":420,"elapsed":5,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"huuS_Pk3eqXY"}},{"cell_type":"code","source":["cpi = cpi.melt(id_vars=['Year'], var_name='Month', value_name='CPI')\n","cpi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"onj_fz9rakjL","executionInfo":{"status":"ok","timestamp":1731374020703,"user_tz":420,"elapsed":5,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"d6551232-6fe2-4c1a-893f-59206c34999b"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year Month   CPI\n","0  1913   Jan   9.8\n","1  1914   Jan  10.0\n","2  1915   Jan  10.1\n","3  1916   Jan  10.4\n","4  1917   Jan  11.7"],"text/html":["\n","  <div id=\"df-dd50d9e1-e830-4b1e-a0c4-a5305c6f80e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>CPI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1913</td>\n","      <td>Jan</td>\n","      <td>9.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1914</td>\n","      <td>Jan</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1915</td>\n","      <td>Jan</td>\n","      <td>10.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1916</td>\n","      <td>Jan</td>\n","      <td>10.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1917</td>\n","      <td>Jan</td>\n","      <td>11.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd50d9e1-e830-4b1e-a0c4-a5305c6f80e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd50d9e1-e830-4b1e-a0c4-a5305c6f80e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd50d9e1-e830-4b1e-a0c4-a5305c6f80e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab31b797-9b82-409c-a778-a210e62b6f8c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab31b797-9b82-409c-a778-a210e62b6f8c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab31b797-9b82-409c-a778-a210e62b6f8c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi","summary":"{\n  \"name\": \"cpi\",\n  \"rows\": 1332,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1913,\n        \"max\": 2023,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          1991,\n          1923,\n          1917\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Nov\",\n          \"Oct\",\n          \"Jan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.32607212904637,\n        \"min\": 9.7,\n        \"max\": 307.789,\n        \"num_unique_values\": 827,\n        \"samples\": [\n          31.3,\n          216.33,\n          34.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["month_map = {\n","    'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6,\n","    'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12\n","}\n","\n","cpi['Month'] = cpi['Month'].map(month_map)\n","\n","cpi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mH0bcv_WbR7C","executionInfo":{"status":"ok","timestamp":1731374020703,"user_tz":420,"elapsed":4,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"b877b3ad-2bf6-49af-9de2-15a6e3e3b7b4"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Month   CPI\n","0  1913      1   9.8\n","1  1914      1  10.0\n","2  1915      1  10.1\n","3  1916      1  10.4\n","4  1917      1  11.7"],"text/html":["\n","  <div id=\"df-929416dc-a569-483e-8e9d-c5aa59fac157\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>CPI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1913</td>\n","      <td>1</td>\n","      <td>9.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1914</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1915</td>\n","      <td>1</td>\n","      <td>10.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1916</td>\n","      <td>1</td>\n","      <td>10.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1917</td>\n","      <td>1</td>\n","      <td>11.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-929416dc-a569-483e-8e9d-c5aa59fac157')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-929416dc-a569-483e-8e9d-c5aa59fac157 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-929416dc-a569-483e-8e9d-c5aa59fac157');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5816b00a-a60a-4fe7-9be7-a2536c530a71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5816b00a-a60a-4fe7-9be7-a2536c530a71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5816b00a-a60a-4fe7-9be7-a2536c530a71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi","summary":"{\n  \"name\": \"cpi\",\n  \"rows\": 1332,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1913,\n        \"max\": 2023,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          1991,\n          1923,\n          1917\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.32607212904637,\n        \"min\": 9.7,\n        \"max\": 307.789,\n        \"num_unique_values\": 827,\n        \"samples\": [\n          31.3,\n          216.33,\n          34.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["cpi.reset_index(drop=True, inplace=True)\n","cpi.head()"],"metadata":{"id":"pgnQO0XgerX5","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1731374068646,"user_tz":420,"elapsed":144,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"c9584a5f-0dbb-4d4d-e759-1601d2b11826"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Month   CPI\n","0  1913      1   9.8\n","1  1914      1  10.0\n","2  1915      1  10.1\n","3  1916      1  10.4\n","4  1917      1  11.7"],"text/html":["\n","  <div id=\"df-d5519a4e-430a-4bb0-8c20-fb31b6244dde\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>CPI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1913</td>\n","      <td>1</td>\n","      <td>9.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1914</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1915</td>\n","      <td>1</td>\n","      <td>10.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1916</td>\n","      <td>1</td>\n","      <td>10.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1917</td>\n","      <td>1</td>\n","      <td>11.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5519a4e-430a-4bb0-8c20-fb31b6244dde')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d5519a4e-430a-4bb0-8c20-fb31b6244dde button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d5519a4e-430a-4bb0-8c20-fb31b6244dde');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-972d5891-6d39-4703-bbac-c32a455736c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-972d5891-6d39-4703-bbac-c32a455736c4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-972d5891-6d39-4703-bbac-c32a455736c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi","summary":"{\n  \"name\": \"cpi\",\n  \"rows\": 1332,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1913,\n        \"max\": 2023,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          1991,\n          1923,\n          1917\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.32607212904637,\n        \"min\": 9.7,\n        \"max\": 307.789,\n        \"num_unique_values\": 827,\n        \"samples\": [\n          31.3,\n          216.33,\n          34.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"source":["from matplotlib import pyplot as plt\n","import seaborn as sns\n","def _plot_series(series, series_name, series_index=0):\n","  palette = list(sns.palettes.mpl_palette('Dark2'))\n","  xs = series['Year']\n","  ys = series['CPI']\n","\n","  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])\n","\n","fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')\n","df_sorted = cpi.sort_values('Year', ascending=True)\n","_plot_series(df_sorted, '')\n","sns.despine(fig=fig, ax=ax)\n","plt.xlabel('Year')\n","_ = plt.ylabel('CPI')\n","plt.title('Year vs. CPI')\n","plt.legend()\n","plt.show()"],"cell_type":"code","execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x520 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"cGfrl7DM8D4-","executionInfo":{"status":"ok","timestamp":1731374139969,"user_tz":420,"elapsed":261,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"5c60c0d4-08eb-42b1-dc47-d1a3bc2d5019"}},{"source":["# @title CPI\n","\n","from matplotlib import pyplot as plt\n","cpi['CPI'].plot(kind='hist', bins=20, title='CPI')\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"6tC0ajEV7-wD","executionInfo":{"status":"ok","timestamp":1731374084069,"user_tz":420,"elapsed":560,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"1438a43d-1305-46a1-af37-d8bb65d7c148"}},{"cell_type":"code","source":[],"metadata":{"id":"aHF0T9Hi78CG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cpi.to_csv('/content/drive/MyDrive/UnemploymentProject/CleanDatasets/CPI_clean.csv', index=False)"],"metadata":{"id":"9aqVStGTDq2e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kZ8F6U_mGnFr"},"execution_count":null,"outputs":[]}]}