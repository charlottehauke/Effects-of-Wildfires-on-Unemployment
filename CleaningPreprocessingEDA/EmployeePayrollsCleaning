{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"30W3yvedx-dT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731374191632,"user_tz":420,"elapsed":18876,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"fc9b1b21-8bb0-4ee7-bc80-bfb8ed221d4e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import pandas as pd\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["employee_payrolls_og = pd.read_excel(\"/content/drive/MyDrive/UnemploymentProject/OGDatasets/employees_on_nonfarm_payrolls_OG.xlsx\", sheet_name='BLS Data Series', skiprows=12)\n","employee_payrolls = employee_payrolls_og.copy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UBpl1Qszby-q","executionInfo":{"status":"ok","timestamp":1731374193234,"user_tz":420,"elapsed":1607,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"b67ee894-8bce-4083-86fc-29266c52e9c9"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/openpyxl/styles/stylesheet.py:237: UserWarning: Workbook contains no default style, apply openpyxl's default\n","  warn(\"Workbook contains no default style, apply openpyxl's default\")\n"]}]},{"cell_type":"code","source":["employee_payrolls.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMm3sRCtcFyE","executionInfo":{"status":"ok","timestamp":1731374193235,"user_tz":420,"elapsed":13,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"aee3fa36-fc9b-4459-b49f-24e027fc547a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 86 entries, 0 to 85\n","Data columns (total 13 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Year    86 non-null     int64  \n"," 1   Jan     86 non-null     int64  \n"," 2   Feb     86 non-null     int64  \n"," 3   Mar     86 non-null     int64  \n"," 4   Apr     86 non-null     int64  \n"," 5   May     86 non-null     int64  \n"," 6   Jun     86 non-null     int64  \n"," 7   Jul     86 non-null     int64  \n"," 8   Aug     86 non-null     int64  \n"," 9   Sep     86 non-null     int64  \n"," 10  Oct     86 non-null     int64  \n"," 11  Nov     85 non-null     float64\n"," 12  Dec     85 non-null     float64\n","dtypes: float64(2), int64(11)\n","memory usage: 8.9 KB\n"]}]},{"cell_type":"code","source":["employee_payrolls.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Y5r9u8JxcMG3","executionInfo":{"status":"ok","timestamp":1731374193235,"user_tz":420,"elapsed":11,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"6a5a18cc-9afb-4b89-f4a8-9e2356d90bf0"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year    Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct  \\\n","0  1939  29296  29394  29804  29786  30145  30520  30472  30870  31608  31975   \n","1  1940  30966  30995  31328  31397  31738  32016  32019  32586  33379  33806   \n","2  1941  33833  34119  34592  35197  36062  36736  37262  37799  38354  38407   \n","3  1942  37706  37833  38488  39138  39686  40172  40625  41226  41663  41832   \n","4  1943  41578  41810  42216  42507  42542  42974  42868  42720  42753  42827   \n","\n","       Nov      Dec  \n","0  31837.0  32037.0  \n","1  34000.0  34653.0  \n","2  38293.0  38548.0  \n","3  41863.0  42322.0  \n","4  42945.0  43153.0  "],"text/html":["\n","  <div id=\"df-3ace37be-18eb-49c5-83f8-bb685866a184\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Jan</th>\n","      <th>Feb</th>\n","      <th>Mar</th>\n","      <th>Apr</th>\n","      <th>May</th>\n","      <th>Jun</th>\n","      <th>Jul</th>\n","      <th>Aug</th>\n","      <th>Sep</th>\n","      <th>Oct</th>\n","      <th>Nov</th>\n","      <th>Dec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1939</td>\n","      <td>29296</td>\n","      <td>29394</td>\n","      <td>29804</td>\n","      <td>29786</td>\n","      <td>30145</td>\n","      <td>30520</td>\n","      <td>30472</td>\n","      <td>30870</td>\n","      <td>31608</td>\n","      <td>31975</td>\n","      <td>31837.0</td>\n","      <td>32037.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1940</td>\n","      <td>30966</td>\n","      <td>30995</td>\n","      <td>31328</td>\n","      <td>31397</td>\n","      <td>31738</td>\n","      <td>32016</td>\n","      <td>32019</td>\n","      <td>32586</td>\n","      <td>33379</td>\n","      <td>33806</td>\n","      <td>34000.0</td>\n","      <td>34653.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1941</td>\n","      <td>33833</td>\n","      <td>34119</td>\n","      <td>34592</td>\n","      <td>35197</td>\n","      <td>36062</td>\n","      <td>36736</td>\n","      <td>37262</td>\n","      <td>37799</td>\n","      <td>38354</td>\n","      <td>38407</td>\n","      <td>38293.0</td>\n","      <td>38548.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1942</td>\n","      <td>37706</td>\n","      <td>37833</td>\n","      <td>38488</td>\n","      <td>39138</td>\n","      <td>39686</td>\n","      <td>40172</td>\n","      <td>40625</td>\n","      <td>41226</td>\n","      <td>41663</td>\n","      <td>41832</td>\n","      <td>41863.0</td>\n","      <td>42322.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1943</td>\n","      <td>41578</td>\n","      <td>41810</td>\n","      <td>42216</td>\n","      <td>42507</td>\n","      <td>42542</td>\n","      <td>42974</td>\n","      <td>42868</td>\n","      <td>42720</td>\n","      <td>42753</td>\n","      <td>42827</td>\n","      <td>42945.0</td>\n","      <td>43153.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ace37be-18eb-49c5-83f8-bb685866a184')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ace37be-18eb-49c5-83f8-bb685866a184 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ace37be-18eb-49c5-83f8-bb685866a184');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-174de08f-50c9-494d-b449-a9221afe8265\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-174de08f-50c9-494d-b449-a9221afe8265')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-174de08f-50c9-494d-b449-a9221afe8265 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"employee_payrolls","summary":"{\n  \"name\": \"employee_payrolls\",\n  \"rows\": 86,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1939,\n        \"max\": 2024,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          2014,\n          1939,\n          2009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37909,\n        \"min\": 29296,\n        \"max\": 155432,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          135471,\n          29296,\n          132021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Feb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38283,\n        \"min\": 29394,\n        \"max\": 156551,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          136211,\n          29394,\n          131792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38421,\n        \"min\": 29804,\n        \"max\": 157210,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          137169,\n          29804,\n          131659\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Apr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38358,\n        \"min\": 29786,\n        \"max\": 158001,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          138306,\n          29786,\n          131842\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"May\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38624,\n        \"min\": 30145,\n        \"max\": 158842,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          139217,\n          30145,\n          132114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jun\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38700,\n        \"min\": 30520,\n        \"max\": 159341,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          139804,\n          30520,\n          131933\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38336,\n        \"min\": 30472,\n        \"max\": 158399,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          138727,\n          30472,\n          130337\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Aug\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38299,\n        \"min\": 30870,\n        \"max\": 158731,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          139105,\n          30870,\n          130216\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38406,\n        \"min\": 31608,\n        \"max\": 159181,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          139793,\n          31608,\n          130571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38754,\n        \"min\": 31975,\n        \"max\": 160007,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          140848,\n          31975,\n          131172\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nov\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38428.6063684283,\n        \"min\": 31837.0,\n        \"max\": 158347.0,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          148758.0,\n          31837.0,\n          139494.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38126.138893773896,\n        \"min\": 32037.0,\n        \"max\": 158269.0,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          148509.0,\n          32037.0,\n          139279.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["null_rows = employee_payrolls[employee_payrolls.isnull().any(axis=1)]\n","print(null_rows)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2QCbHgANd8QN","executionInfo":{"status":"ok","timestamp":1731374193235,"user_tz":420,"elapsed":9,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"e611681f-2ed5-4edf-8f09-559f80e87d1e"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["    Year     Jan     Feb     Mar     Apr     May     Jun     Jul     Aug  \\\n","85  2024  155432  156551  157210  158001  158842  159341  158399  158731   \n","\n","       Sep     Oct  Nov  Dec  \n","85  159181  160007  NaN  NaN  \n"]}]},{"cell_type":"code","source":["employee_payrolls = employee_payrolls.dropna()"],"metadata":{"id":"sqfruH__eeC9","executionInfo":{"status":"ok","timestamp":1731374193235,"user_tz":420,"elapsed":7,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["employee_payrolls = employee_payrolls.melt(id_vars=['Year'], var_name='Month', value_name='Number of Employees')\n","employee_payrolls.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JAN5dRPneh-D","executionInfo":{"status":"ok","timestamp":1731374193389,"user_tz":420,"elapsed":161,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"fb1223c6-7fa1-4035-9854-7516b8502a13"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year Month  Number of Employees\n","0  1939   Jan              29296.0\n","1  1940   Jan              30966.0\n","2  1941   Jan              33833.0\n","3  1942   Jan              37706.0\n","4  1943   Jan              41578.0"],"text/html":["\n","  <div id=\"df-54e9139c-d512-4e38-a102-21fb4d0864e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Number of Employees</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1939</td>\n","      <td>Jan</td>\n","      <td>29296.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1940</td>\n","      <td>Jan</td>\n","      <td>30966.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1941</td>\n","      <td>Jan</td>\n","      <td>33833.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1942</td>\n","      <td>Jan</td>\n","      <td>37706.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1943</td>\n","      <td>Jan</td>\n","      <td>41578.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54e9139c-d512-4e38-a102-21fb4d0864e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54e9139c-d512-4e38-a102-21fb4d0864e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54e9139c-d512-4e38-a102-21fb4d0864e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf02c513-d358-4299-84cb-fd503d6e42a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf02c513-d358-4299-84cb-fd503d6e42a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf02c513-d358-4299-84cb-fd503d6e42a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"employee_payrolls","summary":"{\n  \"name\": \"employee_payrolls\",\n  \"rows\": 1020,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1939,\n        \"max\": 2023,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          2017,\n          1939,\n          2007\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Nov\",\n          \"Oct\",\n          \"Jan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Employees\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37821.29034074677,\n        \"min\": 29296.0,\n        \"max\": 158347.0,\n        \"num_unique_values\": 1012,\n        \"samples\": [\n          82971.0,\n          89865.0,\n          78726.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["month_map = {\n","    'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6,\n","    'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12\n","}\n","\n","employee_payrolls['Month'] = employee_payrolls['Month'].map(month_map)\n","\n","employee_payrolls.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gbLLMjIne_qG","executionInfo":{"status":"ok","timestamp":1731374193389,"user_tz":420,"elapsed":5,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"53d5c2b5-2ef5-459a-b32f-47ef7c0850e7"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Month  Number of Employees\n","0  1939      1              29296.0\n","1  1940      1              30966.0\n","2  1941      1              33833.0\n","3  1942      1              37706.0\n","4  1943      1              41578.0"],"text/html":["\n","  <div id=\"df-8b97b486-e09c-444b-994d-9661236f1714\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Number of Employees</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1939</td>\n","      <td>1</td>\n","      <td>29296.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1940</td>\n","      <td>1</td>\n","      <td>30966.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1941</td>\n","      <td>1</td>\n","      <td>33833.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1942</td>\n","      <td>1</td>\n","      <td>37706.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1943</td>\n","      <td>1</td>\n","      <td>41578.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b97b486-e09c-444b-994d-9661236f1714')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b97b486-e09c-444b-994d-9661236f1714 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b97b486-e09c-444b-994d-9661236f1714');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-86166c82-8028-427b-986e-665c269f99b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-86166c82-8028-427b-986e-665c269f99b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-86166c82-8028-427b-986e-665c269f99b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"employee_payrolls","summary":"{\n  \"name\": \"employee_payrolls\",\n  \"rows\": 1020,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1939,\n        \"max\": 2023,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          2017,\n          1939,\n          2007\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Employees\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37821.29034074677,\n        \"min\": 29296.0,\n        \"max\": 158347.0,\n        \"num_unique_values\": 1012,\n        \"samples\": [\n          82971.0,\n          89865.0,\n          78726.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"source":["# @title Year vs Number of Employees\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","def _plot_series(series, series_name, series_index=0):\n","  palette = list(sns.palettes.mpl_palette('Dark2'))\n","  xs = series['Year']\n","  ys = series['Number of Employees']\n","\n","  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])\n","\n","fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')\n","df_sorted = employee_payrolls.sort_values('Year', ascending=True)\n","_plot_series(df_sorted, '')\n","sns.despine(fig=fig, ax=ax)\n","plt.xlabel('Year')\n","_ = plt.ylabel('Number of Employees')"],"cell_type":"code","execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x520 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"id":"xgvgYV6N8dTB","executionInfo":{"status":"ok","timestamp":1731374227712,"user_tz":420,"elapsed":813,"user":{"displayName":"Quinn Turner","userId":"00666322050152168820"}},"outputId":"eb97e4cc-70d9-41b2-e8b9-959f0998db25"}},{"cell_type":"code","source":["employee_payrolls.reset_index(drop=True).to_csv(\"/content/drive/MyDrive/UnemploymentProject/CleanDatasets/employees_on_nonfarm_payrolls_clean.csv\", index=False)"],"metadata":{"id":"0Yd1uZ-mfHpN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"GqHuqF9HECXe"},"execution_count":null,"outputs":[]}]}